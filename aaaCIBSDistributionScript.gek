scn aaaCIBSDistributionScript
 


array_var aEntry 
array_var aTempArray
array_var aTempArray2

ref rEmptyLL
ref rEntryValue
ref rNPC

float fBackpackLLSystemEnabled
float fNCRBackpackLLChanceNone
float fLegionBackpackLLChanceNone
float fCaravanBackpackLLChanceNone
float fFieldBackpackLLChanceNone
float fDuffleBagLLChanceNone


begin Function{}

	let fBackpackLLSystemEnabled := GetINIFloat "Gameplay:fBackpackLLSystemEnabled" "CIBS.ini"
	let fNCRBackpackLLChanceNone := GetINIFloat "Gameplay:fNCRBackpackLLChanceNone" "CIBS.ini"
	let fLegionBackpackLLChanceNone := GetINIFloat "Gameplay:fLegionBackpackLLChanceNone" "CIBS.ini"
	let fCaravanBackpackLLChanceNone := GetINIFloat "Gameplay:fCaravanBackpackLLChanceNone" "CIBS.ini"
	let fFieldBackpackLLChanceNone := GetINIFloat "Gameplay:fFieldBackpackLLChanceNone" "CIBS.ini"
	let fDuffleBagLLChanceNone := GetINIFloat "Gameplay:fDuffleBagLLChanceNone" "CIBS.ini"

	print "Backpack Leveled List Distribution is enabled: " + $fBackpackLLSystemEnabled
	
	if fBackpackLLSystemEnabled < 1
		return
	endif
	
	let rEmptyLL := TempCloneForm AndaleFridgeLL
    LeveledListRemoveForm rEmptyLL StrangeMeat
    SetLeveledListFlags rEmptyLL 3
    SetChanceNone rEmptyLL 0

	; Making Leveled Lists using scripts
	; Can not add these to template NPCs because the form loader reads from the templates when loading forms from plugins 
	; and the templated actors are already generated before you can edit the templates
	; ^ This is really annoying and shows the limitations of scripts when it comes to replacing hard coding records 
	
	; Make NCR Leveled List (ADD TO HELMET LEVELED LISTS)

	PrintDebug "fCaravanBackpackLLChanceNone: " + $fCaravanBackpackLLChanceNone
	SetChanceNone CIBSCondCaravanBackpackColors fCaravanBackpackLLChanceNone ;change this

	PrintDebug "fFieldBackpackLLChanceNone: " + $fFieldBackpackLLChanceNone
	SetChanceNone CIBSCondFieldBackpackColors fFieldBackpackLLChanceNone ;change this

	PrintDebug "fDuffleBagLLChanceNone: " + $fDuffleBagLLChanceNone
	SetChanceNone CIBSCondBagDuffleColors fDuffleBagLLChanceNone ;change this

	PrintDebug "fNCRBackpackLLChanceNone: " + $fNCRBackpackLLChanceNone
	SetChanceNone CIBSCondFieldBackpackNCR fNCRBackpackLLChanceNone 

	PrintDebug "fLegionBackpackLLChanceNone: " + $fLegionBackpackLLChanceNone
	SetChanceNone CIBSCondBagDuffleLEGION fLegionBackpackLLChanceNone

	foreach aEntry <- (Ar_Range 0, 8)
		LeveledListAddForm CondNVTrooperArmor CIBSBWNVTrooperArmor 1 1 0.0
	loop

	foreach aEntry <- (Ar_Range 0, 8)
		LeveledListAddForm CondLegionArmorExplorer CIBSBWCondLegionArmorExplorer 1 1 0.0
	loop

	foreach aEntry <- (Ar_Range 0, 8)
		LeveledListAddForm CondLegionArmorVeteran CIBSBWCondLegionArmorVeteran 1 1 0.0
	loop

	foreach aEntry <- (Ar_Range 0, 4)
		LeveledListAddForm BoomerWeaponsBackup CIBSCondFieldBackpackVault 1 1 0.0
	loop

	; Make all Backpack Leveled List
	SetChanceNone CIBSLootBackpackColorsAll 0 

	let aTempArray := Ar_List CondOutfitMerc1 CondOutfitMerc2 CondOutfitMerc3 CondOutfitMerc4 CondOutfitMerc5 CondOutfitMerc6

	let aTempArray2 := Ar_List CIBSBWCondOutfitMerc1 CIBSBWCondOutfitMerc2 CIBSBWCondOutfitMerc3 CIBSBWCondOutfitMerc4 CIBSBWCondOutfitMerc5 CIBSBWCondOutfitMerc6

	foreach aEntry <- (Ar_Range 0, 4)
		; doesn't matter if we use key or value here, they're the same
		LeveledListAddForm (aTempArray[aEntry["key"]]) (aTempArray2[aEntry["key"]]) 1 1 0.0
	loop

	; Make Leather Armor Leveled List 
	SetChanceNone CIBSBWCondLeatherArmor 0

	foreach aEntry <- (Ar_Range 0, 4)
		LeveledListAddForm CondLeatherArmor CIBSBWCondLeatherArmor  1 1 0.0
	loop

	; Make Combat Armor Leveled List 
	SetChanceNone CIBSBWCondCombatArmor 0

	foreach aEntry <- (Ar_Range 0, 4)
		LeveledListAddForm CondCombatArmor CIBSBWCondCombatArmor  1 1 0.0
	loop

	; Can't add to these
	; VSpawnSpecialMerchantFemaleGroup02WB VSpawnSpecialMerchantMaleGroup01WB 
	;VSpawnMerchantFemaleGroup02 VSpawnMerchantFemaleGroup01

	let aTempArray := Ar_List MojaveOutpostTravelerCM MojaveOutpostTravelerCM2 MojaveOutpostTravelerAAF VMS02WaterMerchant 
	let aTempArray2 := Ar_List VES09Merchant01 VES09Merchant02 VES09Merchant03 VES09Merchant04 VES09MerchantFem01 
	Ar_Cat aTempArray aTempArray2
	let aTempArray2 := Ar_List VES09MerchantFem02 VES09MerchantFem03 VES09Merchant04 WastelanderAAM WastelanderAM WastelanderAF
	Ar_Cat aTempArray aTempArray2
	let aTempArray2 := Ar_List WastelanderCM WastelanderCF VFSFreesideResidentAM01 
	Ar_Cat aTempArray aTempArray2
	let aTempArray2 := Ar_List VFSFreesideResidentAF01 VFSFreesideResidentHM01 VFSFreesideResidentHM02 
	Ar_Cat aTempArray aTempArray2


	; matters how you call BaseAddItem: if you call it with the period it doesn't 
	foreach aEntry <- aTempArray
		let rNPC := aEntry["value"]
		PrintDebug (GetEditorID rNPC)
		BaseAddItem CIBSCondCaravanBackpackColors 1 rNPC
	loop

	; Random Wasteland Loot and vendors

	let aTempArray := Ar_List ClutterSchoolValue ClutterSchoolJunk ClutterOfficeValue 
	let aTempArray2 := Ar_List ClutterLibraryValue  ClutterGhoulValue ClutterHouseholdSmallNVUsed
	Ar_Cat aTempArray aTempArray2

	foreach aEntry <- aTempArray
		let rEntryValue := aEntry["value"]
		LeveledListAddForm rEntryValue CIBSCondFieldBackpackColors 1 1 0.0
		LeveledListAddForm rEntryValue CIBSCondBagDuffleColors 1 1 0.0
	loop

	let aTempArray2 := Ar_List VendorCaravanApparelBasic1List VendorCaravanApparelBasic2List LL0NPCPowderGangerTrinkets 
	Ar_Cat aTempArray aTempArray2
	let aTempArray2 := Ar_List LL0NPCPowderGangerTrinkets50 VendorArmorTier2 VendorArmorTier3 VendorArmorCommon 
	Ar_Cat aTempArray aTempArray2

	foreach aEntry <- aTempArray
		let rEntryValue := aEntry["value"]
		LeveledListAddForm rEntryValue CIBSCondFieldBackpackColors 1 1 0.0
		LeveledListAddForm rEntryValue CIBSCondBagDuffleColors 1 1 0.0
	loop

	; 188 NCR Trading Post 

	let aTempArray := Ar_List 188NCRArmsMerchantArmor

	foreach aEntry <- aTempArray
		let rEntryValue := aEntry["value"]
		LeveledListAddForm rEntryValue CIBSLootBackpackColorsAll 1 1 0.0
		LeveledListAddForm rEntryValue CIBSCondFieldBackpackColors 1 1 0.0
		LeveledListAddForm rEntryValue CIBSCondFieldBackpackNCR 1 1 0.0
	loop

	; Raiders

	let aTempArray := Ar_List Raider1ArmorComplete Raider2ArmorComplete Raider3ArmorComplete Fiend1ArmorComplete 
	let aTempArray2 := Ar_List Fiend2ArmorComplete Fiend3ArmorComplete LootArmorCombatCombined
	Ar_Cat aTempArray aTempArray2

	foreach aEntry <- aTempArray
		let rEntryValue := aEntry["value"]
		LeveledListAddForm rEntryValue CIBSLootBackpackRaider 1 1 1
	loop

	;let aTempArray := Ar_List LL2Tier2ExplosivesMercenary35 LL0NPCWastelandTrinkets LL0NPCWastelandTrinkets50 LL0NPCWastelandTrinkets35

	;foreach aEntry <- aTempArray
	;	let rEntryValue := aEntry["value"]
	;	LeveledListAddForm rEntryValue CIBSLootBackpackColorsAll 1 1 1
	;loop

	; backpacks look terrible on brotherhood power armor because the laser guns glitch through the backpacks. 
	; There is probably some way of fixing this. 

	;let aTempArray := Ar_List ArmorBoSRanged1Energy ArmorBoSRanged2Energy ArmorBoSRanged5Missile 
	;foreach aEntry <- aTempArray
	;	let rEntryValue := aEntry["value"]
	;	LeveledListAddForm rEntryValue CIBSFieldBackpackBROTHERHOOD 1 1 0.7
	;loopff

	print "CIBS Distribution Script ran successfully."
end
